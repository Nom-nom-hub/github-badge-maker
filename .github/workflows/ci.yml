name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18.17'

jobs:
  # Job 1: Code Quality & Linting
  lint:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📋 Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint

      - name: 🎯 Check TypeScript
        run: npx tsc --noEmit

  # Job 2: Build & Test
  build:
    name: 🏗️ Build & Test
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📋 Install dependencies
        run: npm ci

      - name: 🏗️ Build application
        run: npm run build

      - name: 🧪 Run tests (if available)
        run: npm test --if-present
        continue-on-error: true

      - name: 📊 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: .next/
          retention-days: 7

  # Job 3: Security Audit
  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📋 Install dependencies
        run: npm ci

      - name: 🔒 Run security audit
        run: npm audit --audit-level=high

  # Job 4: Dependency Review (for PRs)
  dependency-review:
    name: 📦 Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Dependency Review
        uses: actions/dependency-review-action@v4

  # Job 5: Deploy Preview (for PRs)
  deploy-preview:
    name: 🚀 Deploy Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [lint, build]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          github-comment: true

  # Job 6: Deploy Production (for main branch)
  deploy-production:
    name: 🚀 Deploy Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [lint, build, security]
    environment: production
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Deploy to Vercel Production
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

  # Job 7: Performance Lighthouse CI
  lighthouse:
    name: 🚨 Lighthouse CI
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: deploy-preview
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚨 Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: ./.github/lighthouse/lighthouserc.json
          uploadArtifacts: true
          temporaryPublicStorage: true